plugins {
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id 'groovy'
    id 'nebula.release' version "17.1.0"
    id 'nebula.maven-publish' version "18.4.0"
    id 'jacoco'
    id 'maven-publish'
}

java {
    sourceCompatibility = '17'
    withJavadocJar()
    withSourcesJar()
}

springBoot {
    buildInfo()
}

ext {
    springDocVersion = '2.3.0'
    spockVersion = '2.4-M4-groovy-4.0'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
//    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"

    implementation "com.h2database:h2:2.1.210"
//    implementation 'com.github.ben-manes.caffeine:caffeine'

    testImplementation ("org.springframework.boot:spring-boot-starter-test") {
//        exclude group: 'org.mockito'
//        exclude group: 'org.junit.jupiter'
    }
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation platform("org.spockframework:spock-bom:${spockVersion}")
    testImplementation "org.spockframework:spock-spring"
    testImplementation "org.apache.groovy:groovy-json"
}

repositories {
    mavenLocal()
    mavenCentral()
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    afterSuite { desc, result ->
        if (!desc.parent)
            println("${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)")
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/pavelfomin/spring-boot-rest-example"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
